

<div class="autocomplete-keywords-container small-12 cell">
  <form autocomplete="off" class="autocomplete-form" action="/image_finder/" method="POST">

      <div class="selected-keyword-container">
        
        <div id="imagePreview">
          Target image ID:
          <input type="number" id="targetImageId" tabindex="1" name="targetImageId" default="0" value="<%= targetImageId %>" />

          <% if (typeof keywords !== 'undefined') { %>

          <span>Current rank: <%= targetImageRank %></span>

          <% } %>
        </div>
        

        <hr />
        <h3>Selected keywords</h3>

        <ul id="selectedKeywordsList">
      
          <% if (typeof keywords !== 'undefined') {
              if (keywords instanceof Array) 
              {
                for (var i = 0; i < keywords.length; ++i) {
                 %>
            

                  <li class="slected-keyword-checkbox">
                    <input type="checkbox" name="keywordWord" value="<%= keywordsWords[i] %>" checked="">                
                    <input type="checkbox" name="keyword" value="<%= keywords[i] %>" checked="">                
                    <span><%= keywordsWords[i] %></span> <a class="remove-keyword button alert" onclick="removeKeyword(event, this);">&#10006</a>
                  </li>

          <%    }
          } else { %>

            <li class="slected-keyword-checkbox">
            <input type="checkbox" name="keywordWord" value="<%= keywordsWords %>" checked="">          
            <input type="checkbox" name="keyword" value="<%= keywords %>" checked="">       
            <span><%= keywordsWords %></span> <a class="remove-keyword button alert" onclick="removeKeyword(event, this);">&#10006</a>
          </li>

             <%
          }
           } %>

        </ul>

          <input type='hidden' id="selectedCounter" name='selectedCounter' value='0'>
      </div>

      <div class="main-query-input-wrapper control-wrapper">

          <div class="settings-window">
            <li class="grid-x grid-padding-x text-center" data-property-index="${nextPropertyIndex}">


              <div class="medium-3 cell">
                <label>Number of results
                    <input id="numResultsInput" name="numResults" type="number" value="500" step="1">
                </label>
              </div>

              <div class="medium-3 cell">
                <label>Aggregation
                  <select id="aggregationInput" name="aggregation">
                    <option value="100" selected title="Softmax probabability vector from nerual network.">Softmax</option>
                    <option value="200">x^p</option>
                    <option value="300" title="">Sine</option>
                  </select>
                </label>
              </div>
              <div class="medium-3 cell">
                <label>Aggregation parameter
                    <input id="aggregationParamInput" name="aggregationParam" type="number" value="1" step="0.1">
                </label>
              </div>

              <div class="medium-3 cell">
                <label>Ranking model
                  <select id="rankingModelInput" class="model-type-select" name="modelType">
                    <option value="1" selected title="Based on Boolean model but images that do not fully satisfy formula are included with lower rank. Ranks are primarly based on number of satisfied clauses. They can be sorted within buckets as well.">Boolean Bucketed</option>
                    <option value="2" disabled>Boolean Extended</option>
                    <option value="3" title="VIRET tool model.">Viret Base</option>
                  </select>
                </label>
              </div>

              <div class="model-properties model-type-0 small-12 cell hidden-by-default">
                <div class="grid-x grid-padding-x text-center">
                    <div class="small-12 cell">
                        <small>Model specific settings</small>
                    </div>
                    <div class="medium-4 cell">
                        
                      <label>
                        True treshold
                        <input id="probTreshold2Input"  name="trueTresholds2" type="number" value="0.005" step="0.00001">
                      </label>
                    </div>

                </div>
              </div>

              <!-- Boolean custom model settings -->
              <div class="model-properties model-type-1 small-12 cell">
                  <div class="grid-x grid-padding-x text-center">
                      <div class="small-12 cell">
                        <small>Model specific settings</small>
                      </div>
                      <div class="medium-4 cell">
                          
                        <label>
                          True treshold
                          <input  id="probTresholdInput" name="trueTreshold" type="number" value="0.005" step="0.00001">
                        </label>
                      </div>

                      <div class="medium-4 cell">
                          <label>In bucket ranking
                            <select  id="inBucketRankingInput" class="in-bucket-ranking-select" name="inBucketRanking">
                              <option value="0" selected>None</option>
                              <option value="1">Sum</option>
                              <option value="2">Max</option>
                            </select>
                          </label>
                        </div>
              
                  </div>
                </div>

                <!-- Boolean extended model settings -->
                <div class="model-properties model-type-2 small-12 cell hidden-by-default">
                  <div class="grid-x grid-padding-x text-center">
                      <div class="small-12 cell">
                          <small>Model specific settings</small>
                      </div>
                      <div class="medium-4 cell">
                          
                        <label>
                          True treshold
                          <input name="trueTreshold3" type="number" value="0.005" step="0.00001">
                        </label>
                      </div>
              
                
                    </div>
                  </div>

                  <!-- Viret base settings -->
                  <div class="model-properties model-type-3 small-12 cell hidden-by-default">
                    <div class="grid-x grid-padding-x text-center">
                        <div class="small-12 cell">
                            <small>Model specific settings</small>
                        </div>
                        <div class="medium-4 cell">
                            
                          <label>
                            True treshold
                            <input id="probTreshold4Input" name="trueTreshold4" type="number" value="0.005" step="0.00001">
                          </label>
                        </div>
              
                        <div class="medium-4 cell">
                            <label>Query operation
                              <select id="queryOperationsInput" class="query_operations-select" name="queryOperations">
                                <option value="0" selected>Multiply, Add</option>
                                <option value="1">Add only</option>
                              </select>
                            </label>
                          </div>
                
                    </div>
                  </div>

            </li>
          </div>
          
          <input type="text" id="queryInput" tabindex="1" name="query">

      </div>
      <input type="submit" class="button success" id="sendQuery" value="Search">
  </form>
  <script>
    $( document ).ready(function() {
      $(".model-type-select").change(function() 
        {
          const $this = $(this);
      
          $this.parent().parent().parent().children(".model-properties").hide();
          $this.parent().parent().parent().children(".model-type-" + $this.val()).show();
      
        });

      // Setup provided settings
      $("#numResultsInput").val(<%= selectedSettings.numResults %>).change();
      $("#aggregationInput").val(<%= selectedSettings.aggregation %>).change();
      $("#rankingModelInput").val(<%= selectedSettings.rankingModel %>).change();
      $("#probTresholdInput").val(<%= selectedSettings.probTreshold %>).change();
      $("#inBucketRankingInput").val(<%= selectedSettings.inBucketRanking %>).change();
      $("#probTreshold4Input").val(<%= selectedSettings.probTreshold4 %>).change();
      $("#queryOperationsInput").val(<%= selectedSettings.queryOperations %>).change();


     });
     
  </script>

</div>

<div class="image-browser-main-tiles small-12 cell">
<% if (typeof query !== 'undefined') {%>
  <h3>Query: <%= query %></h3>
  <% } %>
  <ul id="resultImagesList">

  <% if (typeof relevantImages !== 'undefined') {%>
    <%- JSON.stringify(relevantImagesArray) %>
  <% } %>


  <% if (typeof relevantImagesArray !== 'undefined') {%>

<%
for (var i = 0; i < relevantImagesArray.length; ++i) {
%>

<li class="rel-img-item" data-open="modalImage" onclick="SwitchModalImageHtmlContents(<%= relevantImagesArray[i].imageId %>);">
  <img src="/images/<%= relevantImagesArray[i].filename %>" id="<%= relevantImagesArray[i].imageId %>" />
</li>

<% }%>
<% } %>

  </ul>


  <div class="reveal" id="modalImage" data-reveal data-src="999">
    
  <button class="close-button" data-close aria-label="Close modal" type="button">
    <span aria-hidden="true">&times;</span>
  </button>
</div>

<script>
function SwitchModalImageHtmlContents(id) {

    var $modal = $("#modalImage");

    $.ajax('/images_ajax?imageId=' + id)
      .done(function(resp)
      {
        var html = "<div class='modal-image-data'>";
        html +="<img src='/images/" + resp.filename + "' />";
        html += "<h3 class='id'>Image ID:" + resp.imageId + "</h3>";
        html += "<hr />";
        html += "<ol class='probs-list'>";

        for (var i = 0; i < resp.probabilityVector.length; ++i) 
        {
          html += "<li class='probs-list-item'>";
            html += "<small class='index'>(" + resp.probabilityVector[i].index +  ")</small>";
            html += "<p class='keyword'>" + resp.probabilityVector[i].keyword +  "</p>";
            html += "<span class='prob'>" + resp.probabilityVector[i].prob.toFixed(10) +  "</span>";
          html += "</li>";
        }


        html += "</ol>";
        html += "</div>";

        // Switch HTML
        $modal.html(html);
      }
  );
  }

</script>

</div>



<!-- Include autocomplete module -->
<%- include autocomplete_logic.ejs %>