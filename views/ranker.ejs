<!-- Include header -->
<%- include common/header.ejs %>

<section class="global-messages-section grid-container">
  <div class="grid-x grid-x align-center">
    <div class="callout" id="mainGlobalMessageCont">
      <h5 class="primary"></h5>
      <p class="secondary"></p>
    </div>
  </div>
</section>

<section class="ranker-grid-section grid-container">
  <div class="grid-x grid-x align-center">

    

<div class="ranker-left-sidebar large-3 cell">

  <form autocomplete="off" class="autocomplete-form" action="/image_finder/" method="POST">

    <!-- Settings bar -->
    <section class="settings-bar-section grid-container">
      <div class="grid-x grid-padding-x align-left">  

        <!-- Image settings -->
        <div class="get-random-image-cont small-4 cell">
            <button type="button" class="button icon-settings open-left-oc" data-toggle="offCanvasLeftSplit1"><img src="/images/generic/icon_settings.svg"></button>
        </div>

        <div class="target-image-rank-cont small-4 cell">
          <span id="targetImageRankOut"></span>
        </div>
        

      </div>
    </section>

    <!-- Image preview -->
    <section class="image-preview-section grid-container">
      <div class="grid-x grid-padding-x align-left">  

        <!-- Image settings -->
        <div class="get-random-image-cont small-4 cell">
            <a class="button" onclick="getRandomImageToPreview(this);">RNG image</a>
        </div>
        <div class="target-image-id-cont small-4 cell">
          
          <label class="target-image-id-label">Target image ID:
            <input type="number" id="targetImageId" tabindex="1" name="targetImageId" default="0" value="<%= ranker.targetImageId ? ranker.targetImageId : '' %>" />
          </label>
        </div>
        <div class="target-image-id-cont small-4 cell">
          <a class="button" onclick="getSelectedImageToPreview(this);">Get selected</a>
        </div>

        <!-- Image preview canvas -->
        <div class="image-preview small-12 cell">
          <img id="targetImage" src="/images/generic/bg_neural.jpg" />
        </div>

      </div>
    </section>


    <!-- Autocomplete section -->
    <section class="autocomplete-section grid-container">
      <div class="grid-x grid-padding-x align-left"> 

        <div class="autocomplete-input-cont small-12 cell">
          <!-- Autocomplete text input -->
          <input disabled type="text" id="queryInput" tabindex="1" name="query">
          <input type='hidden' id="selectedCounter" name='selectedCounter' value='0'>
          
          <ul class="selected-keywords-list" id="selectedKeywordsList">
        
            <% if (typeof keywords !== 'undefined') {
                if (keywords instanceof Array) 
                {
                  for (var i = 0; i < keywords.length; ++i) {
                  %>
              

                    <li class="slected-keyword-checkbox">
                      <input type="checkbox" name="keywordWord" value="<%= keywordsWords[i] %>" checked="">                
                      <input type="checkbox" name="keyword" value="<%= keywords[i] %>" checked="">                
                      <span><%= keywordsWords[i] %></span> <a class="remove-keyword button alert" onclick="removeKeyword(event, this);"> X</a>
                    </li>

              <%    }
              } else { %>

                <li class="slected-keyword-checkbox">
                <input type="checkbox" name="keywordWord" value="<%= keywordsWords %>" checked="">          
                <input type="checkbox" name="keyword" value="<%= keywords %>" checked="">       
                <span><%= keywordsWords %></span> <a class="remove-keyword button alert" onclick="removeKeyword(event, this);"> X</a>
              </li>

                <%
              }
              } %>

          </ul>
          
        </div>
      </div>

    </form>
    

  </div>

<!-- Images grid -->
<div class="ranker-right-sidebar image-grid-section image-browser-main-tiles large-9 cell grid-container">
  
  <ul id="resultImagesList" class="grid-x grid-x align-center align-middle">

  </ul>

</div>



<!-- Single image modal window -->
<div class="reveal" id="modalImage" data-reveal data-src="999">
  <button class="close-button" data-close aria-label="Close modal" type="button">
    <span aria-hidden="true">&times;</span>
  </button>
</div>




<!-- Include autocomplete module -->
<%- include modules/autocomplete_logic_ranker.ejs %>

    

  </div>
</section>

</body>

<script>
  function clearImageGrid()
  {
    $targetList = $("#resultImagesList");
    $targetList.html("");

    $selectedKeywordsList = $("#selectedKeywordsList");
    $selectedKeywordsList.html("");
  }

  function clearTargetImage()
  {
    $("#targetImage").attr("src", "/images/generic/bg_neural.jpg");
    $("#targetImageId").val(0);
  }

  function getRandomImageToPreview(elem)
  {
    // Clear old grid
    clearImageGrid();

    // Create AJAX call to get appropriate data
    get('/ranker_ajax_get_random_image_and_start_search_session')
      // If response OK
      .then((data) => {

        

        data = JSON.parse(data);

        $("#targetImageId").val(data.imageId);
        $("#targetImage").attr("src", "/images/" + data.imageFilename);
        $("#queryInput").prop('disabled', false);

      })
      // If error occured
      .catch((err) => {
          // Do stuff on error...
      });
  }

  function getSelectedImageToPreview(elem)
  {
    const targetId = $("#targetImageId").val();

    // Clear old grid
    clearImageGrid();

    // Create AJAX call to get appropriate data
    get('/ranker_ajax_get_selected_image_and_start_search_session?imageId=' + targetId)
      // If response OK
      .then((data) => {

        data = JSON.parse(data);

        $("#targetImageId").val(data.imageId);
        $("#targetImage").attr("src", "/images/" + data.imageFilename);
        $("#queryInput").prop('disabled', false);

      })
      // If error occured
      .catch((err) => {
          // Do stuff on error...
      });
  }

  function showGlobalMessage(messagePrimary, messageSecondary, time)
  {
    $mainGlobalMessageCont = $("#mainGlobalMessageCont");
    $primary = $($mainGlobalMessageCont.children(".primary")[0]);
    $secondary = $($mainGlobalMessageCont.children(".secondary")[0]);

    $mainGlobalMessageCont.show();
    $primary.html(messagePrimary);
    $secondary.html(messageSecondary);

    setTimeout(() => {
      clearGlobalMesssage();
    }, time);
  }

  function clearGlobalMesssage()
  {
    $mainGlobalMessageCont = $("#mainGlobalMessageCont");
    $primary = $($mainGlobalMessageCont.children(".primary")[0]);
    $secondary = $($mainGlobalMessageCont.children(".secondary")[0]);


    $primary.html("");
    $secondary.html("");
    $mainGlobalMessageCont.hide();
  }

  function submitImage(elem)
  {
    const imageId = $(elem).parent().data("image-id");

    // Create AJAX call to get appropriate data
    get('/ranker_ajax_submit_image?imageId=' + imageId)
      // If response OK
      .then((data) => {

        data = JSON.parse(data);

        // If correct image submitted
        if (data.correct)
        {
          clearTargetImage();
          // Clear old grid
          clearImageGrid();

          showGlobalMessage("Correct.", "Great job", 3000);
        } 
        else 
        {
          showGlobalMessage("Invalid image.", "Try again", 3000);
        }
      })
      // If error occured
      .catch((err) => {
          // Do stuff on error...
      });
  }

  let currentPrinter;
  let currentImagesToPrintArray;
  let currentImageIndex;
  let numImagesToPrint;
  const numImagesPerBatch = 1000;
  const batchPrintTimeout = 2000;

  function printImagesFromTo()
  {
    $targetList = $("#resultImagesList");

    for (var i = 0; i < numImagesPerBatch && currentImageIndex < numImagesToPrint; ++currentImageIndex) 
    {
      $targetList.append(
        '<li class="rel-img-item small-6 medium-4 large-2 cell" onclick="switchModalImageHtmlContents(' +currentImagesToPrintArray[currentImageIndex].imageId + ')"\
        data-open="modalImage" data-image-id="' + currentImagesToPrintArray[currentImageIndex].imageId + '" style="background-image: url(\'/images/thumbnails/' + currentImagesToPrintArray[currentImageIndex].filename + '\')">\
          <a class="button btn-submit success" onclick="">S</a>\
        </li>'
      );

      ++i;
    }
  }

  function processAction(action, operand)
  {
    // Stop printer if running
    clearInterval(currentPrinter);
    currentImagesToPrintArray = undefined;

    // Create AJAX call to get appropriate data
    get('/ranker_ajax_process_action?action=' + action + '&operand=' + operand)
      // If response OK
      .then((data) => {

        data = JSON.parse(data);

        $targetList = $("#resultImagesList");
        $targetList.html("");

        if (typeof data.relevantImagesArray.targetImageRank !== "undefined")
        {
          $("#targetImageRankOut").html("<p>Target rank: </p>" + data.relevantImagesArray.targetImageRank);
        }
        
        numImagesToPrint = data.relevantImagesArray.images.length;
        currentImagesToPrintArray = data.relevantImagesArray.images;

        currentImageIndex = 0;
        for (currentImageIndex = 0; currentImageIndex < numImagesPerBatch; ++currentImageIndex) 
        {
          $targetList.append(
            '<li class="rel-img-item small-6 medium-4 large-2 cell" onclick="switchModalImageHtmlContents(' + currentImagesToPrintArray[currentImageIndex].imageId+ ')"\
              data-image-id="' + data.relevantImagesArray.images[currentImageIndex].imageId + '" style="background-image: url(\'/images/thumbnails/' + data.relevantImagesArray.images[currentImageIndex].filename + '\')">\
              <a class="button btn-submit success" onclick="submitImage(this);">S</a>\
              <a class="just-clicker"  data-open="modalImage"></a>\
            </li>'
          );
        }

        //currentPrinter = setInterval(printImagesFromTo, batchPrintTimeout);

      })
      // If error occured
      .catch((err) => {
          // Do stuff on error...
      });
  }


function addKeyword(keywordId) 
{
  processAction(1, keywordId);
}

function switchModalImageHtmlContents(id) 
{

  var $modal = $("#modalImage");

  $.ajax('/ranker_ajax_get_image_keywords_for_interactive_search?imageId=' + id)
    .done(function(data)
    {
      const hypernymsArray = data.hypernymsArray;
      const nonHypernymsArray = data.hypernymsArray;

      var html = "<div class='modal-image-data grid-x grid-padding-x align-center'>";
      // html +="<img src='/images/" + resp.filename + "' />";
      // html += "<h3 class='id'>Image ID:" + resp.imageId + "</h3>";
      // html += "<hr />";
      html += "<ol class='non-hypernyms-list cell small-6'>";

      for (var i = 0; i < nonHypernymsArray.length; ++i) 
      {
        html += "<li class='probs-list-item '>";
          html += "<a class='keyword' onclick='addKeyword(" + nonHypernymsArray[i].keywordId + ")'>" + nonHypernymsArray[i].keyword +  "</a>";
        html += "</li>";
      }
      html += "</ol>";

      html += "</div>";

      // Switch HTML
      $modal.html(html);
    }
  );
}

</script>

<!-- Include footer -->
<%- include common/footer.ejs %>