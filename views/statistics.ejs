<!-- Include header -->
<%- include common/header.ejs %>


<section class="page-title-section">
  <div class="grid-x grid-padding-x align-center grid-container">
    
    <div class="page-title small-12 cell text-center">
      <h1>Statistics</h1>
    </div>

  </div>
</section>

<!-- Best models show-off on real/simulated user -->
<section class="statistics-models-showoff-section ">
  <div class="grid-x grid-padding-x align-center grid-container">

    <div class="section-header large-12 cell text-center">
      <h2>Best transformations/models performance</h2>
      <p>These charts show number of input queries ranked until some rank.</p>
    </div>

    <div class="chart1-left small-6 cell text-center">
      <h4>Real users</h4>
      
      <canvas class="chart-canvas" id="modelShowOffChar1"></canvas> 
      
    </div>

    <div class="chart1-left small-6 cell text-center">
      <h4>Simulated users</h4>
      
      <canvas class="chart-canvas" id="modelShowOffChar2"></canvas> 
    </div>

  </div>
</section>

<section class="statistics-hyper-nonhyper-section">
  <div class="grid-x grid-padding-x align-center grid-container">

    <div class="section-header large-12 cell text-center">
      <h2>Real user annotator queries</h2>
      <p>Statistics about user quesries gathered in Query annotator.</p>
    </div>

    <div class="section-sub-header large-12 cell">
      <h3>Hypernym/non-hypernym hit ditribution</h3>
      <p>Charts showing how good keywords real users use to describe images compared to what neural network sees.</p>

      <p>E.g. if neural network has the most probable keywords in descending order "Cat, Table, Dog, Car, Road" and user types in "Cat, Car, Dog"
      then user scored 1, 3 and 4 compared to neural network and in hit histogram we increment positions 1,2,4.
      </p>
    </div>

    <div class="nonhyper small-6 cell text-center">
      <h4>Non-hypernyms</h4>
      <h5>Percentage in user queries: <%= nonHyper.misc.percentage %>%</h5>
      <canvas class="chart-canvas" id="nonhyperChart"></canvas> 
      
    </div>

    <div class="hyper small-6 cell text-center">
      <h4>Hypernyms</h4>
      <h5>Percentage in user queries: <%= hyper.misc.percentage %>%</h5>
      <canvas class="chart-canvas" id="hyperChart"></canvas> 
    </div>

  </div>
</section>

<section class="statistics-query-refining-section">
  <div class="grid-x grid-padding-x align-center grid-container">

    <div class="section-header large-12 cell text-center">
      <h2>Query refining statistics</h2>
      <p>Statistics about users that rafined their queries based on immediate feedback</p>
    </div>

    <div class="nonhyper small-6 cell text-center">
      <h4>Average image rank with increasing number of actions</h4>
      
      <canvas class="chart-canvas" id="queryRefiningChart1"></canvas> 
      
    </div>

    <div class="hyper small-6 cell text-center">
      <h4>xx</h4>
      
      <canvas class="chart-canvas" id="queryRefiningChart2"></canvas> 
    </div>

  </div>
</section>

<script src="/javascripts/Chart.bundle.js"></script>
<script>

$( document ).ready(function() 
{
    drawInteractiveSearchChart1();
    drawInteractiveSearchChart2();
});

function drawInteractiveSearchChart1()
{
  const data = <%- JSON.stringify(nonHyper) %>;

  drawInteractiveSearchChart(data.chartData, "nonhyperChart");
}


function drawInteractiveSearchChart2()
{
  const data = <%- JSON.stringify(hyper) %>

  drawInteractiveSearchChart(data.chartData, "hyperChart");
}




const chartSettings = {
    // The type of chart we want to create
    type: 'line',

    // The data for our dataset
    data: {},

    // Configuration options go here
    options: {
      animation: {
          duration: 0
      },
    responsive: true,
    title: {
      display: false,
      text: ''
    },
    tooltips: {
      mode: 'index',
      intersect: false,
    },
    hover: {
      mode: 'nearest',
      intersect: true
    },
    scales: {
      xAxes: [{
        display: true,
        scaleLabel: {
          display: true,
          labelString: 'The best ranked bind from NN'
        }
      }],
      yAxes: [{
        display: true,
        ticks: {
            beginAtZero: true
        },
        scaleLabel: {
          display: true,
          labelString: 'Number of hits by users'
        }
      }]
    }
  }
}

function drawInteractiveSearchChart(chartData, canvasId)
{

  const returnedDataArray = new Array();
  returnedDataArray.push(chartData);

  let datasets = new Array();

  const num = returnedDataArray.length;
  const divPerChanel = (num / 3) + 1;

  let labels = new Array();

  for (var i = 0; i < returnedDataArray.length; ++i) 
  {
    const returnedData = returnedDataArray[i];

    // Calculate coefs for colour
    const r = (i % 3 == 0 ? 1 : 0) * 255;
    const g = (i % 3 == 1 ? 1 : 0) * 255;
    const b = (i % 3 == 2 ? 1 : 0) * 255;


    const borderColor = "rgba(" + r + ", " + g + ", " + b + ", 1)";

    let data = new Array();

    // Create labels from indices
    for (var j = 0; j < returnedData.length; ++j)
    {
      if (i == 0) {
        labels.push(returnedData[j].index);
      }
      
      data.push(returnedData[j].value);
    }

    const label = String(i);

    const chartData = {
      borderColor,
      backgroundColor: "rgba(255, 0, 0, 0)",
      label,
      pointRadius: 0.5,
      pointHoverRadius: 0.5,
      borderWidth: 1.0,
      data,
    }

    datasets.push(chartData);
  }


  var chartData = {
    labels,
    datasets
  }

  const chartCanvas = document.getElementById(canvasId);
                       
  // Create chart
  var ctx = chartCanvas.getContext('2d');
  var chart = new Chart(ctx, chartSettings);

  // Update data
  chart.data = chartData;
  // Update chart
  chart.update();
}
</script>

</body>

<!-- Include footer -->
<%- include common/footer.ejs %>